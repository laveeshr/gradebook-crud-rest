/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.asu.cse564.assignments.crud.gradebook.ui;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.sun.jersey.api.client.ClientResponse;
import edu.asu.cse564.assignments.crud.gradebook.cli.utils.Converter;
import edu.asu.cse564.assignments.crud.gradebook.client.model.GradeBook;
import edu.asu.cse564.assignments.crud.gradebook.restcl.GradeBook_CRUD_cl;
import java.io.IOException;
import java.net.URI;
import javax.ws.rs.core.Response;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author laveeshrohra
 */
public class GradeBookUI extends javax.swing.JFrame {

    /**
     * Creates new form GradeBookUI
     */
    
    private static final Logger LOG = LoggerFactory.getLogger(GradeBookUI.class);
    
    private GradeBook_CRUD_cl gradeBookCli;
    
    private URI resourceURI;
    
    public GradeBookUI() {
        LOG.info("Creating a Appointment_REST_UI object");
        initComponents();
        
        gradeBookCli = new GradeBook_CRUD_cl();
    }
    
    private String convertFormToJSONString(){
        GradeBook entry = new GradeBook();
        if (!taskId.getText().equals("")){
            entry.setTaskId(Integer.parseInt(taskId.getText()));
        }
        entry.setWorkTask(workTask.getText());
        entry.setGrade(grade.getText());
        entry.setFeedback(feedback.getText());
        entry.setStudentId(studentId.getText());
        entry.setAppeal(appeal.isSelected());
            
        String jsonReq = "";
        try {
            jsonReq = Converter.ObjectToJSON(entry);
        } 
        catch (JsonProcessingException ex) {
            ex.printStackTrace();
        }
        
        return jsonReq;
    }
    
    private void populateForm(ClientResponse clientResponse){
        LOG.info("Populating the UI with the GradeBook info");
        
        LOG.debug("The Client Response entity is {}", clientResponse);
        
        String entity = "";
        if(clientResponse.getStatus() != Response.Status.NO_CONTENT.getStatusCode()){
            entity = clientResponse.getEntity(String.class);
        }
        
        try{
            if ((clientResponse.getStatus() == Response.Status.OK.getStatusCode()) ||
                (clientResponse.getStatus() == Response.Status.CREATED.getStatusCode()) || 
                (clientResponse.getStatus() == Response.Status.CONFLICT.getStatusCode())){
//                entity = 
                
                GradeBook entry = (GradeBook)Converter.JSONToObject(entity, GradeBook.class);
                LOG.debug("The Client Response appointment object is {}", entry);
                
                // Populate Appointment info
                taskId.setText(Integer.toString(entry.getId()));
                studentId.setText(entry.getStudentId());
                workTask.setText(entry.getWorkTask());
                grade.setText(entry.getGrade());
                feedback.setText(entry.getFeedback());
                appealedStatus.setSelected(entry.getAppeal());
            } 
            else {
                taskId.setText("");
                workTask.setText("");
                grade.setText("");
                feedback.setText("");
                studentId.setText("");
                description.setText("");
                appealedStatus.setSelected(false);
            }
            
            // Populate HTTP Header Information
            httpCode.setText(Integer.toString(clientResponse.getStatus()));
            
            if(clientResponse.getType() != null){
                mediaType.setText(clientResponse.getType().toString());
            }
            else{
                mediaType.setText("");
            }
            
            description.setText(entity);
            
            // The Location filed is only populated when a Resource is created
//            location.setText(clientResponse.getLocation().toString());
            
            if (clientResponse.getStatus() == Response.Status.CREATED.getStatusCode()){
                location.setText(clientResponse.getLocation().toString());
            } 
            else {
                location.setText("");
            }
            clearRadioButtons();
            enableAll();
            disableSubmitButton();
        } 
        catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        createEntry = new javax.swing.JRadioButton();
        readEntry = new javax.swing.JRadioButton();
        updateEntry = new javax.swing.JRadioButton();
        deleteEntry = new javax.swing.JRadioButton();
        appeal = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        taskId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        workTask = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        grade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        submitBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedback = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        studentId = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        Instructor = new javax.swing.JRadioButton();
        student = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        appealedStatus = new javax.swing.JCheckBox();
        httpCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mediaType = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        location = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        buttonGroup1.add(createEntry);
        createEntry.setText("Create Entry");
        createEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEntryActionPerformed(evt);
            }
        });

        buttonGroup1.add(readEntry);
        readEntry.setText("Read Entry");
        readEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readEntryActionPerformed(evt);
            }
        });

        buttonGroup1.add(updateEntry);
        updateEntry.setText("Update Entry");
        updateEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEntryActionPerformed(evt);
            }
        });

        buttonGroup1.add(deleteEntry);
        deleteEntry.setText("Delete Entry");
        deleteEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEntryActionPerformed(evt);
            }
        });

        buttonGroup1.add(appeal);
        appeal.setText("Appeal");
        appeal.setEnabled(false);
        appeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appealActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteEntry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(readEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createEntry)
                            .addComponent(updateEntry))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addComponent(appeal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createEntry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(readEntry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateEntry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteEntry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(appeal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Task ID");

        jLabel2.setText("Work Task");

        workTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workTaskActionPerformed(evt);
            }
        });

        jLabel3.setText("Grade");

        jLabel4.setText("Feedback");

        jLabel5.setText("Action");

        jLabel6.setText("GradeBook Data");

        submitBtn.setText("Submit");
        submitBtn.setEnabled(false);
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        feedback.setColumns(20);
        feedback.setRows(5);
        jScrollPane1.setViewportView(feedback);

        jLabel12.setText("Student ID");

        studentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIdActionPerformed(evt);
            }
        });

        buttonGroup2.add(Instructor);
        Instructor.setSelected(true);
        Instructor.setText("Instructor");
        Instructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstructorActionPerformed(evt);
            }
        });

        buttonGroup2.add(student);
        student.setText("Student");
        student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentActionPerformed(evt);
            }
        });

        jLabel13.setText("Appealed");

        appealedStatus.setText("Appealed");
        appealedStatus.setEnabled(false);
        appealedStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appealedStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(grade)
                            .addComponent(taskId)
                            .addComponent(workTask)
                            .addComponent(studentId)
                            .addComponent(appealedStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(120, 120, 120))))
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Instructor)
                .addGap(18, 18, 18)
                .addComponent(student)
                .addGap(175, 175, 175))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Instructor)
                    .addComponent(student))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(taskId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(workTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(appealedStatus)
                            .addComponent(jLabel13))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        httpCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                httpCodeActionPerformed(evt);
            }
        });

        jLabel7.setText("HTTP Code");

        jLabel8.setText("Media Type");

        mediaType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediaTypeActionPerformed(evt);
            }
        });

        jLabel9.setText("Location");

        jLabel10.setText("Description");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane2.setViewportView(description);

        jLabel11.setText("HTTP Headers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel7))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(location)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(httpCode)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(mediaType, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(httpCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(mediaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEntryActionPerformed
        // TODO add your handling code here:
        enableExceptTaskId();
        clearTaskId();
        enableSubmitButton();
    }//GEN-LAST:event_createEntryActionPerformed

    private void workTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workTaskActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        LOG.info("Invoking REST Client based on selection");
        
        String taskEntryId = taskId.getText();
        String studentId = this.studentId.getText();
        ClientResponse clientResponse = null;
        if ( createEntry.isSelected()){
            LOG.debug("Invoking {} action", createEntry.getText());//Create
            clientResponse = gradeBookCli.createGradebookEntry(this.convertFormToJSONString());
            resourceURI = clientResponse.getLocation();
            LOG.debug("Retrieved location {}", resourceURI);   
//            this.populateForm(clientResponse);
        } 
        else if (readEntry.isSelected()) {
            LOG.debug("Invoking {} action", readEntry.getText());// Read
            clientResponse = gradeBookCli.retrieveEntry(ClientResponse.class, taskEntryId, studentId);
//            this.populateForm(clientResponse);  
        } 
        else if (updateEntry.isSelected()) {
            LOG.debug("Invoking {} action", updateEntry.getText());//Update
            clientResponse = gradeBookCli.updateEntry(this.convertFormToJSONString(), taskEntryId, studentId);
        } 
        else if (deleteEntry.isSelected()) {
            LOG.debug("Invoking {} action", deleteEntry.getText());//Delete
            clientResponse = gradeBookCli.deleteEntry(taskEntryId, studentId);
        }
        else if(appeal.isSelected()){
            LOG.debug("Invoking {} action", appeal.getText());//Appeal
            clientResponse = gradeBookCli.updateEntry(this.convertFormToJSONString(), taskEntryId, studentId);
        }
        this.populateForm(clientResponse);
    }//GEN-LAST:event_submitBtnActionPerformed

    private void httpCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_httpCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_httpCodeActionPerformed

    private void mediaTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediaTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mediaTypeActionPerformed

    private void studentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIdActionPerformed

    private void readEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readEntryActionPerformed
        // TODO add your handling code here:
        disableExceptTaskAndStudentId();
        enableSubmitButton();
        clearTextExceptTaskAndStudentId();
    }//GEN-LAST:event_readEntryActionPerformed

    private void updateEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEntryActionPerformed
        // TODO add your handling code here:
        enableAll();
        enableSubmitButton();
    }//GEN-LAST:event_updateEntryActionPerformed

    private void deleteEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEntryActionPerformed
        // TODO add your handling code here:
        disableExceptTaskAndStudentId();
        enableSubmitButton();
        clearTextExceptTaskAndStudentId();
    }//GEN-LAST:event_deleteEntryActionPerformed

    private void InstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstructorActionPerformed
        // TODO add your handling code here:
        showInstructorTasks();
        disableAppeal();
    }//GEN-LAST:event_InstructorActionPerformed

    private void studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentActionPerformed
        // TODO add your handling code here:
        enableAppeal();
        hideInstructorTasks();
    }//GEN-LAST:event_studentActionPerformed

    private void appealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appealActionPerformed
        // TODO add your handling code here:
        enableSubmitButton();
        disableExceptTaskAndStudentId();
        clearTextExceptTaskAndStudentId();
//        enableStudentName();
//        enableWorkTask();
    }//GEN-LAST:event_appealActionPerformed

    private void appealedStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appealedStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appealedStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GradeBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GradeBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GradeBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GradeBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradeBookUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Instructor;
    private javax.swing.JRadioButton appeal;
    private javax.swing.JCheckBox appealedStatus;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton createEntry;
    private javax.swing.JRadioButton deleteEntry;
    private javax.swing.JTextArea description;
    private javax.swing.JTextArea feedback;
    private javax.swing.JTextField grade;
    private javax.swing.JTextField httpCode;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField location;
    private javax.swing.JTextField mediaType;
    private javax.swing.JRadioButton readEntry;
    private javax.swing.JRadioButton student;
    private javax.swing.JTextField studentId;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField taskId;
    private javax.swing.JRadioButton updateEntry;
    private javax.swing.JTextField workTask;
    // End of variables declaration//GEN-END:variables

    private void disableExceptTaskAndStudentId() {
        taskId.setEnabled(true);
        studentId.setEnabled(true);
        workTask.setEnabled(false);
        grade.setEnabled(false);
        feedback.setEnabled(false);
//        appealedStatus.setEnabled(false);
    }

    private void enableExceptTaskId() {
        taskId.setEnabled(false);
        studentId.setEnabled(true);
        workTask.setEnabled(true);
        grade.setEnabled(true);
        feedback.setEnabled(true);
//        appealedStatus.setEnabled(true);
    }

    private void enableAll() {
        enableExceptTaskId();
        taskId.setEnabled(true);
    }

    private void clearTaskId() {
        taskId.setText("");
    }

    private void clearRadioButtons() {
        LOG.debug("Clearing radio buttons after receiving response");
        buttonGroup1.clearSelection();
        enableAll();
    }

    private void enableSubmitButton() {
        submitBtn.setEnabled(true);
    }

    private void disableSubmitButton() {
        submitBtn.setEnabled(false);
    }

    private void clearTextExceptTaskAndStudentId() {
//        studentId.setText("");
        workTask.setText("");
        grade.setText("");
        feedback.setText("");
        appealedStatus.setSelected(false);
    }

    private void disableAppeal() {
        appeal.setEnabled(false);
        
    }

    private void enableAppeal() {
        appeal.setEnabled(true);
    }

    private void hideInstructorTasks() {
        performInstructorTasks(false);
    }

    private void showInstructorTasks() {
        performInstructorTasks(true);
        clearRadioButtons();
        disableSubmitButton();
    }
    
    private void performInstructorTasks(boolean task){
        createEntry.setEnabled(task);
        updateEntry.setEnabled(task);
        deleteEntry.setEnabled(task);
    }

    private void enableStudentName() {
        studentId.setEnabled(true);
    }

    private void enableWorkTask() {
        workTask.setEnabled(true);
    }

    private void enableAppealedStatus() {
        appealedStatus.setEnabled(true);
    }
}
